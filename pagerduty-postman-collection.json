{
    "id": "e23ea1ef7d497e7afe8309e6693d5f3f",
    "name": "PagerDuty",
    "description": null,
    "auth": null,
    "events": null,
    "variables": [],
    "order": [],
    "folders_order": [],
    "folders": [],
    "requests": [
        {
            "id": "56f5357355188ca182419569cfb1e7ce",
            "name": "Teams Resource",
            "url": "https\/teams\/{teamId}\/people",
            "description": "List people and integrations associated with a given team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "teamId",
                    "description": "Unique identifier for team",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "92ec5e8d45f18aa7b2b040ab75d5dc31",
            "name": "Users {user_guid}",
            "url": "https\/users\/{user_guid} ",
            "description": "Returns customer's user by user GUID.\t\t\t",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": " GET ",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "148c16324a8642b9d508efd888324fbd",
            "name": "Users {user_guid}",
            "url": "https\/users\/{user_guid} ",
            "description": "DELETE users user gu",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": " DELETE ",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "7b4ca150e0b74bdf99d1c421360ab76b",
            "name": "Users",
            "url": "https\/users ",
            "description": "Returns all customer's users.\t\t\t",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": " GET ",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "da63a53f1ac0b945008e2313b817f947",
            "name": "Users",
            "url": "https\/users ",
            "description": "Creates a new user.\t\t\t",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": " POST ",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "8c9700981de93124a8aba1638e4b8db2",
            "name": "Users",
            "url": "https\/users ",
            "description": "Updates a user.\t\t\t",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": " PUT ",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "bf374e47675ca53b10bfcfc0b247adee",
            "name": "List users",
            "url": "https\/users ",
            "description": "List users of your PagerDuty account, optionally filtered by a search query.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "query",
                    "description": "Filters the results, showing only the escalation policies whose names contain the query.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "e0d065eb67fee244ce2309fe9b5fd8cf",
            "name": "Create a user",
            "url": "https\/users ",
            "description": "Create a new user. Note that you must also supply a `password` property to create a user--it will not be returned by any API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "user",
                    "description": "The user to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "0bd24488b4fd60bd3cf3376be254e79e",
            "name": "REST API Reference",
            "url": "https\/api_reference",
            "description": "REST API Reference.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "66580485b7c13bf8539cdca0a13bc4e1",
            "name": "List abilities",
            "url": "https\/abilities",
            "description": "List all of your account's abilities, by name.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "21895f44e09bf31053a9bc3ee876efe8",
            "name": "Test an ability",
            "url": "https\/abilities\/{id}",
            "description": "Test whether your account has a given ability.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "2216ed07cce73be39fa562fc62f0ea2d",
            "name": "List installed add-ons",
            "url": "https\/addons",
            "description": "List all of the add-ons installed on your account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "service_ids[]",
                    "description": "Filters the results, showing only add-ons for the given services",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter",
                    "description": "Filters the results, showing only add-ons of the given type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "a4808b749eca9b85f23c9eb82adfbdf8",
            "name": "Install an add-on",
            "url": "https\/addons",
            "description": "Install an add-on for your account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "addon",
                    "description": "The add-on to be installed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "0dd62dfe06c25c288eb75cf99d04040f",
            "name": "Get an add-on",
            "url": "https\/addons\/{id}",
            "description": "Get details about an existing add-on.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "e971e99d34bb680dacf8bd32840ee518",
            "name": "Delete an add-on",
            "url": "https\/addons\/{id}",
            "description": "Remove an existing add-on.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "b7a75b865f875965bde726d8ba769fb0",
            "name": "Update an add-on",
            "url": "https\/addons\/{id}",
            "description": "Update an existing add-on.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "addon",
                    "description": "The add-on to be installed.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "4f013061103762bfa40f11a801dc5ed3",
            "name": "List escalation policies",
            "url": "https\/escalation_policies",
            "description": "List all of the existing escalation policies.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "query",
                    "description": "Filters the results, showing only the escalation policies whose names contain the query.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "user_ids[]",
                    "description": "Filters the results, showing only escalation policies on which any of the users is a target.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "7a47095665aba5677ad96bebc5d8c833",
            "name": "Create an escalation policy",
            "url": "https\/escalation_policies",
            "description": "Creates a new escalation policy. There must be at least one existing escalation rule added to create a new escalation policy.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "escalation_policy",
                    "description": "The escalation policy to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "1387ef4348b4a62ba157c20455627a71",
            "name": "Get an escalation policy",
            "url": "https\/escalation_policies\/{id}",
            "description": "Get information about an existing escalation policy and its rules.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "f3a5b7188dc42b6bac81da7e040faa51",
            "name": "Delete an escalation policy",
            "url": "https\/escalation_policies\/{id}",
            "description": "Deletes an existing escalation policy and rules. The escalation policy must not be in use by any services.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "f5fff4f79bc10d38053ce01b735730f1",
            "name": "Update an escalation policy",
            "url": "https\/escalation_policies\/{id}",
            "description": "Updates an existing escalation policy and rules.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "escalation_policy",
                    "description": "The escalation policy to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "688f99087359f4f955967f6bf408facf",
            "name": "List incidents",
            "url": "https\/incidents",
            "description": "List existing incidents.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "statuses[]",
                    "description": "Return only incidents with the given statuses. (More status codes may be introduced in the future.)",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "sort_by",
                    "description": "Used to specify both the field you wish to sort the results on (incident_number\/created_on\/resolved_on\/urgency), as well as the direction (asc\/desc) of the results. The sort_by field and direction should be separated by a colon. A maximum of two fields can be included, separated by a comma. Sort direction defaults to ascending. The account must have the `urgencies` ability to sort by the urgency.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "69170683edd967903aa48af974e32dcf",
            "name": "Manage incidents",
            "url": "https\/incidents",
            "description": "Acknowledge, resolve, escalate or reassign one or more incidents.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "payload",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "c9d3c0d71720ea8df2b4dc1986eb3e70",
            "name": "Get an incident",
            "url": "https\/incidents\/{id}",
            "description": "Show detailed information about an incident. Accepts either an incident id, or an incident number.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Either the id or number of the incident to retrieve.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "3480af83c17acc9c5aea1b1a0cac01ba",
            "name": "Update an incident",
            "url": "https\/incidents\/{id}",
            "description": "Acknowledge, resolve, escalate or reassign an incident.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "id",
                    "description": "Either the id or number of the incident to retrieve.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "payload",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "eafe6b3a8d0ac66dbb859da6a8527516",
            "name": "List log entries for the incident",
            "url": "https\/incidents\/{id}\/log_entries",
            "description": "List log entries for the specified incident.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "4326163393db528f73faf7ee11d3de7e",
            "name": "List existing notes for the specified incident",
            "url": "https\/incidents\/{id}\/notes",
            "description": "List existing notes for the specified incident.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "e11396ede4c51f1e6c69b5594f153a15",
            "name": "Create a new note for the specified incident",
            "url": "https\/incidents\/{id}\/notes",
            "description": "Create a new note for the specified incident.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "payload",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "44136b4ea344e376521c7f5e4a7554dc",
            "name": "Snooze an incident",
            "url": "https\/incidents\/{id}\/snooze",
            "description": "Post incents  snooze",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "payload",
                    "description": "",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "450a3db5084da6185d865b690a3ff531",
            "name": "List log entries",
            "url": "https\/log_entries",
            "description": "List all of the incident log entries across the entire account.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "f504ed1148e40104711810b197c5dbdd",
            "name": "Get a log entry",
            "url": "https\/log_entries\/{id}",
            "description": "Get details for a specific incident log entry. This method provides additional information you can use to get at raw event data.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "1e129819462e37a5e7896a644abf6978",
            "name": "List maintenance windows",
            "url": "https\/maintenance_windows",
            "description": "List existing maintenance windows, optionally filtered by service and\/or team, or whether they are from the past, present or future.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "filter",
                    "description": "Filters the results, showing only add-ons of the given type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "query",
                    "description": "Filters the results, showing only the escalation policies whose names contain the query.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "3ac79a63ba6eb19b742478d1ac3479e7",
            "name": "Create a maintenance window",
            "url": "https\/maintenance_windows",
            "description": "Create a new maintenance window for the specified services. No new incidents will be created for a service that is in maintenance.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "maintenance_window",
                    "description": "The maintenance window object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "2e2cb86873c21a54d0b7bca7fd2d43d4",
            "name": "Get a maintenance window",
            "url": "https\/maintenance_windows\/{id}",
            "description": "Get an existing maintenance window.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "8effc2af55183a3e6bc5903bce18dd1b",
            "name": "Delete or end a maintenance window",
            "url": "https\/maintenance_windows\/{id}",
            "description": "Delete an existing maintenance window if it's in the future, or end it if it's currently on-going. If the maintenance window has already ended it cannot be deleted.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "4cf4c66afe9294b8ddd4ec1f2aded8b6",
            "name": "Update a maintenance window",
            "url": "https\/maintenance_windows\/{id}",
            "description": "Update an existing maintenance window.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "maintenance_window",
                    "description": "The maintenance window object.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "970812dddbc6a8c3dbdb8a629b321adb",
            "name": "List notifications",
            "url": "https\/notifications",
            "description": "List notifications for a given time range, optionally filtered by type (sms_notification, email_notification, phone_notification, or push_notification).",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "since",
                    "description": "The start of the date range over which you want to search. The time element is optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "until",
                    "description": "The end of the date range over which you want to search. This should be in the same format as since. The size of the date range must be less than 3 months.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "filter",
                    "description": "Filters the results, showing only add-ons of the given type",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "7c97a9549247d6c663168f9504d368c1",
            "name": "List all of the on-calls",
            "url": "https\/oncalls",
            "description": "List the on-call entries during a given time range.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "user_ids[]",
                    "description": "Filters the results, showing only escalation policies on which any of the users is a target.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "escalation_policy_ids[]",
                    "description": "Filters the results, showing only on-calls for the specified escalation policy IDs.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "schedule_ids[]",
                    "description": "Filters the results, showing only on-calls for the specified schedule IDs. If `null` is provided in the array, it includes permanent on-calls due to direct user escalation targets.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "since",
                    "description": "The start of the date range over which you want to search. The time element is optional.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "until",
                    "description": "The end of the date range over which you want to search. This should be in the same format as since. The size of the date range must be less than 3 months.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "earliest",
                    "description": "This will filter on-calls such that only the earliest on-call for each combination of escalation policy, escalation level, and user is returned. This is useful for determining when the \"next\" on-calls are for a given set of filters.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "376569fc5dcc7414fda8704c918f4d5a",
            "name": "List services",
            "url": "https\/services",
            "description": "List existing services.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "query",
                    "description": "Filters the results, showing only the escalation policies whose names contain the query.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "8d70f8b81298d91892862c9ace206db3",
            "name": "Create a service",
            "url": "https\/services",
            "description": "Create a new service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "service",
                    "description": "The service to be created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "20bcccc11cfc525e6c3ef7431ca70631",
            "name": "Get a service",
            "url": "https\/services\/{id}",
            "description": "Get details about an existing service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "dbb09a5d98c17363385a116675c177b5",
            "name": "Delete a service",
            "url": "https\/services\/{id}",
            "description": "Delete an existing service. Once the service is deleted, it will not be accessible from the web UI and new incidents won't be able to be created for this service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "77563ceb06bd4a43a6faf7da45a12838",
            "name": "Update a service",
            "url": "https\/services\/{id}",
            "description": "Update an existing service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "service",
                    "description": "The service to be created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "2cc28363c887809164d8d623684e5fe4",
            "name": "Create a new integration",
            "url": "https\/services\/{id}\/integrations",
            "description": "Create a new integration belonging to a service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "integration",
                    "description": "The integration to be created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "ea8f578cc3229e44e5bf96e440fa37f3",
            "name": "Update an existing integration",
            "url": "https\/services\/{id}\/integrations\/{integration_id}",
            "description": "Update an integration belonging to a service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "integration",
                    "description": "The integration to be created",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "c02e34d713570a6ed86ae06c3975f2a2",
            "name": "View an integration",
            "url": "https\/services\/{id}\/integrations\/{integration_id}",
            "description": "Get details about an integration belonging to a service.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "8a42e6f622b13bbd331be7c2c368a451",
            "name": "Create a team",
            "url": "https\/teams",
            "description": "Create a new team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "team",
                    "description": "The team to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "b164a4ca57315f749ad579c06894ab53",
            "name": "List teams",
            "url": "https\/teams",
            "description": "List teams of your PagerDuty account, optionally filtered by a search query.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "query",
                    "description": "Filters the results, showing only the escalation policies whose names contain the query.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "bf3ac731e656a185e74dd3f13a5d6ab0",
            "name": "Get a team",
            "url": "https\/teams\/{id}",
            "description": "Get details about an existing team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "9d81ba32b74c88231c8c486f548c8b01",
            "name": "Delete a team",
            "url": "https\/teams\/{id}",
            "description": "Remove an existing team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "66a12aa6517e942a042361b742e7c990",
            "name": "Update a team",
            "url": "https\/teams\/{id}",
            "description": "Update an existing team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "team",
                    "description": "The team to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "f6e934f51ce9acdc631f7f63d24333a5",
            "name": "Remove an escalation policy from a team",
            "url": "https\/teams\/{id}\/escalation_policies\/{escalation_policy_id}",
            "description": "Delete teams  escalation policies escalation policy",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "6b303c05e99c384bb15923f727b70724",
            "name": "Add an escalation policy to a team",
            "url": "https\/teams\/{id}\/escalation_policies\/{escalation_policy_id}",
            "description": "Put teams  escalation policies escalation policy",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "0f0e7eb8e2e2feeb0d977f6897f80f0c",
            "name": "Remove a user from a team",
            "url": "https\/teams\/{id}\/users\/{user_id}",
            "description": "Remove a user from a team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "18633725e86f938c4a29381331535a6a",
            "name": "Add a user to a team",
            "url": "https\/teams\/{id}\/users\/{user_id}",
            "description": "Add a user to a team.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "aadf75d00ad0bb0ff77effdef5911c01",
            "name": "Get a user",
            "url": "https\/users\/{id}",
            "description": "Get details about an existing user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "0f8d84dfddc3356fe4e3b1349e138183",
            "name": "Delete a user",
            "url": "https\/users\/{id}",
            "description": "Remove an existing user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "fa17f84c5e6eab41a22c183f0b8be734",
            "name": "Update a user",
            "url": "https\/users\/{id}",
            "description": "Update an existing user. Note that you may also supply a `password` property--it will not be returned by any API.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "user",
                    "description": "The user to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "c9f80111a5fdc94107f0779ddbb175cc",
            "name": "List a user's contact methods",
            "url": "https\/users\/{id}\/contact_methods",
            "description": "List contact methods of your PagerDuty user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "9fffb2b4556723a6646cdae5d1f75100",
            "name": "Create a user contact method",
            "url": "https\/users\/{id}\/contact_methods",
            "description": "Create a new contact method.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "contact_method",
                    "description": "The contact method to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "901944ebe8f849562fe1a029bcc4c212",
            "name": "Get a user's contact method",
            "url": "https\/users\/{id}\/contact_methods\/{contact_method_id}",
            "description": "Get details about a user's contact method.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "21f84712382b850401bf160131fcc930",
            "name": "Delete a user's contact method",
            "url": "https\/users\/{id}\/contact_methods\/{contact_method_id}",
            "description": "Delete users  contact methods contact method",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "9f0d7635842220e78316d46af3171839",
            "name": "Update a user's contact method",
            "url": "https\/users\/{id}\/contact_methods\/{contact_method_id}",
            "description": "Put users  contact methods contact method",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "user",
                    "description": "The user to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "7c2facb087faf2bff16251e3c60550e9",
            "name": "List a user's notification rules",
            "url": "https\/users\/{id}\/notification_rules",
            "description": "List notification rules of your PagerDuty user.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "e9a57ca621b906ec2d75aeca94fb9be2",
            "name": "Create a user notification rule",
            "url": "https\/users\/{id}\/notification_rules",
            "description": "Create a new notification rule.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "post",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "notification_rule",
                    "description": "The notification rule to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "20db4afd436c4c1339558f24eadd0e92",
            "name": "Get a user's notification rule",
            "url": "https\/users\/{id}\/notification_rules\/{notification_rule_id}",
            "description": "Get users  notification rules notification rule",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "include[]",
                    "description": "Array of additional details to include.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "9e6c5c357139076b747f831ecdc9a4a5",
            "name": "Delete a user's notification rule",
            "url": "https\/users\/{id}\/notification_rules\/{notification_rule_id}",
            "description": "Delete users  notification rules notification rule",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "delete",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "e074f8f5d1eec1ef838b7445432d5edb",
            "name": "Update a user's notification rule",
            "url": "https\/users\/{id}\/notification_rules\/{notification_rule_id}",
            "description": "Put users  notification rules notification rule",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "put",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "notification_rule",
                    "description": "The notification rule to be created.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "c51cefcd262fe7671596e3ce616e6c3f",
            "name": "List vendors",
            "url": "https\/vendors",
            "description": "List all vendors.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "d8bccbfb55a82806a3f09f7e6cb97085",
            "name": "Get a vendor",
            "url": "https\/vendors\/{id}",
            "description": "Get details about one specific vendor.",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "get",
            "pathVariableData": [],
            "queryParams": [],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "5cab441e09919ce2988f3842bf8ffe87",
            "name": "Creating a service",
            "url": "https\/inventory\/services",
            "description": " inventory services",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The display name for the service.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkType",
                    "description": "The type of check: either http or tcp",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timeout",
                    "description": "How many seconds to wait until timing out. Max 30.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkUrl",
                    "description": "HTTP Check - The URL to issue the request to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkLocations",
                    "description": "A JSON list of locations to check from e.g. [&quot;lon&quot;, &quot;dub&quot;]. Each location has its own ???API ID??? which is noted on the locations list. Location ID&#39;s can be found on our support site",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkMethod",
                    "description": "HTTP Check - The HTTP method used to issue the check: either GET, POST, PUT or DELETE. Required for HTTP check, irrelevant for TCP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "slowThreshold",
                    "description": "HTTP Check - Request time millisecond threshold after which service is deemed slow.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group",
                    "description": "The group the service belongs to. If this is empty it???s set to null.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "auth",
                    "description": "Basic HTTP auth username and password. e.g. {&quot;username&quot;:&quot;Thomas&quot;, &quot;password&quot;:&quot;password&quot;}",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "headers",
                    "description": "HTTP Check - headers to include e.g. {&quot;User-Agent&quot;: &quot;Thomas the Tank Engine&quot;}",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body",
                    "description": "HTTP Check - Content of the HTTP requestbody",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validateCert",
                    "description": "HTTP Check - Whether to validate the SSL certificate or not",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "host",
                    "description": "TCP Check - The hostname or IP address to issue the TCP check to",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "port",
                    "description": "TCP Check - The port number to issue the TCP check to",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "TCP Check - The content to send when opening the TCP socket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tags",
                    "description": "A JSON list of tag IDs.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "64dd88ccdac85e181475a1ab17e66457",
            "name": "Updating a service",
            "url": "https\/inventory\/services\/serviceId",
            "description": " inventory services service",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "serviceId",
                    "description": "The ID of your service.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The display name for the service.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkType",
                    "description": "The type of check: either http or tcp",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timeout",
                    "description": "How many seconds to wait until timing out. Max 30.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkLocations",
                    "description": "A JSON list of locations to check from e.g. [&quot;lon&quot;, &quot;dub&quot;]. Each location has its own &quot;API ID&quot; which is noted on the locations list.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group",
                    "description": "The group the service belongs to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkUrl",
                    "description": "HTTP Check - The URL to issue the request to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkMethod",
                    "description": "HTTP Check - The HTTP method used to issue the check: either GET or POST.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "slowThreshold",
                    "description": "HTTP Check - Request time millisecond threshold after which service is deemed slow.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body",
                    "description": "HTTP Check - Content of the HTTP request body",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "host",
                    "description": "TCP Check - The hostname or IP address to issue the TCP check to",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "port",
                    "description": "TCP Check - The port number to issue the TCP check to",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "TCP Check - The content to send when opening the TCP socket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validateCert",
                    "description": "Whether to validate the SSL certificate or not",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "auth",
                    "description": "Basic HTTP auth username and password. e.g. {&quot;username&quot;:&quot;Thomas&quot;, &quot;password&quot;:&quot;password&quot;}",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "headers",
                    "description": "HTTP headers to include e.g. {&quot;User-Agent&quot;: &quot;Thomas the Tank Engine&quot;}",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tags",
                    "description": "A JSON list of tag IDs.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The display name for the service.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkType",
                    "description": "The type of check: either http or tcp",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "timeout",
                    "description": "How many seconds to wait until timing out. Max 30.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkLocations",
                    "description": "A JSON list of locations to check from e.g. [&quot;lon&quot;, &quot;dub&quot;]. Each location has its own ???API ID??? which is noted on the locations list. Location ID&#39;s can be found on our support site",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "group",
                    "description": "The group the service belongs to. If this is empty it???s set to null.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkUrl",
                    "description": "HTTP Check - The URL to issue the request to.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "checkMethod",
                    "description": "HTTP Check - The HTTP method used to issue the check: either GET, POST, PUT or DELETE. Required for HTTP check, irrelevant for TCP.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "slowThreshold",
                    "description": "HTTP Check - Request time millisecond threshold after which service is deemed slow.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "body",
                    "description": "HTTP Check - Content of the HTTP requestbody",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "host",
                    "description": "TCP Check - The hostname or IP address to issue the TCP check to",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "port",
                    "description": "TCP Check - The port number to issue the TCP check to",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "data",
                    "description": "TCP Check - The content to send when opening the TCP socket",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "validateCert",
                    "description": "HTTP Check - Whether to validate the SSL certificate or not",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "auth",
                    "description": "Basic HTTP auth username and password. e.g. {&quot;username&quot;:&quot;Thomas&quot;, &quot;password&quot;:&quot;password&quot;}",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "headers",
                    "description": "HTTP Check - headers to include e.g. {&quot;User-Agent&quot;: &quot;Thomas the Tank Engine&quot;}",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "tags",
                    "description": "A JSON list of tag IDs.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "5249832bc4046fb4c002949395169772",
            "name": "Listing service groups",
            "url": "https\/inventory\/services\/groups\/?token=token",
            "description": " inventory services groups token token",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "a4b55e7afe6453af93405bf58a31b2de",
            "name": "Creating a recipient",
            "url": "https\/notifications\/recipients",
            "description": "Create recipients for your alert notifications\n",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "GET",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "name",
                    "description": "The display name for the service.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "type",
                    "description": "The type of notification integration",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "channel",
                    "description": "Channel name for chat integrations",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "url",
                    "description": "URL for webhook integrations",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        },
        {
            "id": "23406bfba78901e6e7b25dab0d0caf43",
            "name": "Deleting a user",
            "url": "https\/users\/users\/userId",
            "description": " users users user",
            "data": [],
            "dataMode": "raw",
            "headerData": null,
            "method": "",
            "pathVariableData": [],
            "queryParams": [
                {
                    "key": "userId",
                    "description": "The ID of the user to delete",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                },
                {
                    "key": "token",
                    "description": "Your API token.",
                    "value": "",
                    "equals": true,
                    "enabled": true
                }
            ],
            "auth": null,
            "events": null,
            "folder": null,
            "protocolProfileBehavior": {
                "disableBodyPruning": true
            },
            "responses": [],
            "currentHelper": null,
            "helperAttributes": null,
            "collectionId": "e23ea1ef7d497e7afe8309e6693d5f3f",
            "rawModeData": ""
        }
    ]
}